<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.member.mapper.MemberMapper">
  <resultMap id="BaseResultMap" type="com.qf.member.entity.Member">
    <!--@mbg.generated-->
    <!--@Table t_member-->
    <id column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="member_status" jdbcType="INTEGER" property="memberStatus" />
    <result column="registration_type" jdbcType="INTEGER" property="registrationType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="Login_Password" jdbcType="INTEGER" property="loginPassword" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    member_id, member_name, phone, member_status, registration_type, create_time, Login_Password, 
    login_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_member
    where member_id = #{memberId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from t_member
    where member_id = #{memberId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="member_id" keyProperty="memberId" parameterType="com.qf.member.entity.Member" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_member (member_name, phone, member_status, 
      registration_type, create_time, Login_Password, 
      login_time)
    values (#{memberName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{memberStatus,jdbcType=INTEGER}, 
      #{registrationType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{loginPassword,jdbcType=INTEGER}, 
      #{loginTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="member_id" keyProperty="memberId" parameterType="com.qf.member.entity.Member" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberName != null">
        member_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="memberStatus != null">
        member_status,
      </if>
      <if test="registrationType != null">
        registration_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="loginPassword != null">
        Login_Password,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="memberStatus != null">
        #{memberStatus,jdbcType=INTEGER},
      </if>
      <if test="registrationType != null">
        #{registrationType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginPassword != null">
        #{loginPassword,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.member.entity.Member">
    <!--@mbg.generated-->
    update t_member
    <set>
      <if test="memberName != null">
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="memberStatus != null">
        member_status = #{memberStatus,jdbcType=INTEGER},
      </if>
      <if test="registrationType != null">
        registration_type = #{registrationType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginPassword != null">
        Login_Password = #{loginPassword,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.member.entity.Member" >
    <!--@mbg.generated-->
    update t_member
    set member_name = #{memberName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      member_status = #{memberStatus,jdbcType=INTEGER},
      registration_type = #{registrationType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      Login_Password = #{loginPassword,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=TIMESTAMP}
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
<resultMap id="SubResultMap" type="com.qf.member.vo.MemberVO">
  <id column="member_id" property="memberId"></id>
  <result column="member_name" property="memberName"></result>
  <result column="phone" property="phone"></result>
  <result column="create_time" property="createTime"></result>
  <result column="member_status" property="memberStatus"></result>
  <result column="member_balance" property="memberBalance"></result>
  <result column="registration_type" property="registrationType"></result>
  <result column="authentication_status" property="authenticationStatus"></result>
</resultMap>
  <select id="selectAll" resultMap="SubResultMap">
      select t.member_id,
             t.member_name,
             t.phone,
             t.member_status,
             t.registration_type,
             t.create_time,
            b.member_balance,
             r.authentication_status
         from t_member t left join t_bank_card b on t.member_id = b.member_id
          left join t_real_name r on t.member_id = r.member_id
    <where>
          <if test="memberName != null">
             member_name like concat('%', #{memberName}, '%')
          </if>
          <if test="phone != null">
              and phone like concat('%', #{phone}, '%')
          </if>
          <if test="memberStatus != null">
              and member_status = #{memberStatus}
          </if>
          <if test="registrationType != null">
              and registration_type = #{registrationType}
          </if>
          <if test="startTime != null and endTime != null">
              and create_time between #{startTime} and #{endTime}
          </if>
           <if test="memberId !=null">
             and t.member_id=#{memberId}
           </if>
    </where>
  </select>

  <select id="selectByMemberId" resultType="com.qf.member.entity.BankCard">
    select b.member_balance
    from t_bank_card b
    where member_id=#{memberId}
  </select>

  <select id="selectByMemberId01" resultType="com.qf.member.entity.RealName">
    select r.authentication_status
    from t_real_name r
    where member_id=#{memberId}
  </select>
</mapper>